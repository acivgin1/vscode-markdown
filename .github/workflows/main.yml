name: CI

# Build VSIX packages in production and debug mode.
# Run tests against debug build.
#
# This workflow is designed to be run on pushing to master branch.

on:
  push:
    branches: [master]
    paths-ignore:
      - ".github/**/*.md"
      - ".vscode/**"
      - "images/**"
      - "README.md"
  workflow_dispatch:
  repository_dispatch:
    types: ["package"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: "Setup Node.js environment"
        uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: "Cache Node.js packages"
        id: "cache"
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux.
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: "Install dependencies"
        run: |
          npm ci
          npm install -g vsce

      # Our prepublish script runs in production mode by default.
      - name: Build production
        run: vsce package

      - name: "Set prepublish script for debug build"
        shell: pwsh
        run: |
          $packageManifest = Get-Content './package.json' | ConvertFrom-Json -NoEnumerate
          $packageManifest.scripts.'vscode:prepublish' = 'webpack --mode development'
          $packageManifest | ConvertTo-Json -Depth 100 | Out-File -FilePath './package.json' -Encoding 'utf8NoBOM'

      # We should run tests against debug build to make error messages as useful as possible.
      # Thus, build a debug package first, and use it in test script later.
      - name: Build debug
        run: |
          vsce package --out debug.vsix

      - name: Test
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm test

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Markdown-All-in-One-${{ github.sha }}
          path: ./*.vsix

      # Keep the cache of the default branch clean.
      # This is regarded as a post-run step that we don't really pay attention to.
      # Run it last to save waiting time.
      - name: "Verify npm cache"
        if: ${{ steps.cache.outputs.cache-hit != 'true' && github.ref == 'refs/heads/master' }}
        run: |
          npm cache verify

      # If the run failed, npm log may help to diagnose.
      - name: "(debug) Upload npm log"
        if: ${{ !success() }}
        uses: actions/upload-artifact@v2
        with:
          name: "npm-debug-log"
          path: "~/.npm/_logs"
